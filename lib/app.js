// Generated by CoffeeScript 1.6.3
/*
#   Module dependencies.
*/

var async, cnumber, color, colors, moment, program, stream, sync, updated, _;

program = require("commander");

_ = require('underscore');

async = require('async');

moment = require('moment');

colors = require('colors');

colors.setTheme({
  time: 'grey',
  verbose: 'cyan',
  prompt: 'grey',
  info: 'blue'
});

color = ['yellow', 'cyan', 'magenta', 'red', 'green', 'blue'];

cnumber = 0;

program.version("0.0.1").option("-s, --stream [value]", "select Streamname(e.g.'nikezono')").parse(process.argv);

updated = 0;

stream = program.stream;

process.nextTick(function() {
  /* socket.io Configration*/

  var client, socket;
  client = require('socket.io-client');
  socket = client.connect("http://unific.net");
  return socket.on('connect', function() {
    console.info(("Add Stream '" + stream + "'. Please Wait for Sync").info);
    socket.emit('sync stream', {
      stream: stream,
      latest: (new Date()).getTime() - 1000 * 60 * 60
    });
    socket.on('sync completed', function(pages) {
      var sorted;
      sorted = _.sortBy(pages, function(obj) {
        return Date.parse(obj.page.pubDate);
      });
      updated = sorted[0].page.pubDate;
      return sync(sorted);
    });
    return setInterval(function() {
      return socket.emit('sync stream', {
        stream: stream,
        latest: updated
      });
    }, 1000 * 60);
  });
});

sync = function(sorted) {
  return async.eachSeries(sorted, function(article, cb) {
    var date, site, title;
    date = ("[" + (moment(article.page.pubDate).format("hh:mm")) + "]").time;
    title = article.page.title[color[cnumber]];
    site = article.feed.site.underline;
    cnumber = cnumber === color.length - 1 ? 0 : cnumber + 1;
    return setTimeout(function() {
      console.log("" + date + " " + title + " - " + site);
      return cb();
    }, 100);
  }, function() {});
};
